{"pageProps":{"postData":{"id":"proposal","contentHtml":"<p>Details about PhD research proposal process.</p>\n<h3>Presentation</h3>\n<p>Friday, December 16, 2022 12:00 PM - 2:00 PM</p>\n<p>University Hall 2nd floor, Room 227<br>\n(College of Education's conference room)<br>\nSummerville Campus.</p>\n<p><a href=\"https://map.concept3d.com/?id=824#!m/268018\"\ntarget='blank'>Map</a></p>\n<h3>Documents</h3>\n<ul>\n<li>\n<p>Research proposal: <a href=\"../files/proposal.pdf\" target=\"blank\">\"Certifying Implicit Computational Complexity\"</a></p>\n</li>\n<li>\n<p>Presentation: <a href=\"../files/proposal_slides.pdf\" target=\"blank\">slides</a></p>\n</li>\n</ul>\n<details>\n  <summary>Abstract</summary>\n  Complexity analysis offers developers better understanding of program's runtime behavior, but mechanical approaches to evaluate complexity properties are scarce and limited.\n  This research proposal addresses this gap between computational complexity theory and its practical application.\n  The main hypothesis is that techniques from Implicit Computational Complexity (ICC) provide new approaches to automatic program analysis and resolve certain limitations of the state-of-the-art complexity analysis techniques.\n  This is unapparent because ICC systems have primarily been used for theoretical purposes and their practical applications are rare.\n  The intent of this work is to evaluate the hypothesis along three directions.\n  First to show that obtaining automatic program analysis with ICC is in fact achievable.\n  Then, to demonstrate that ICC systems are viable candidates for achieving formally verified complexity analysis.\n  Lastly, to confirm that ICC-based techniques find extended applications, e.g., in optimizing complexity properties during compilation.\n  The formal verification aspect is particularly interesting because certifying the correctness of a complexity analysis technique has not been done before.\n  Collectively these directions suggest that ICC is not just a treasure of the theorists but can move practical analyses a few steps closer to becoming a standard in modern development workflows.\n</details>\n<h3>The Graduate School (TGS) Guidance</h3>\n<p>The research proposal must conform to the following format:<br>\n<a href=\"https://www.augusta.edu/gradschool/documents/writingaresearchproposal.pdf\">Instructions for Writing a Research Proposal</a>.</p>\n<h3>Schedule</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th align=\"left\">Date</th>\n<th align=\"left\">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>✔️</td>\n<td align=\"left\">November 14</td>\n<td align=\"left\"><a href=\"https://www.augusta.edu/gradschool/documents/advisory-committee-phd.pdf\">\"Advisory Committee\"</a> form is sent to TGS</td>\n</tr>\n<tr>\n<td>✔️</td>\n<td align=\"left\">December 1</td>\n<td align=\"left\">Invitations to presentation are sent to fellow graduate students</td>\n</tr>\n<tr>\n<td>✔️</td>\n<td align=\"left\">December 2</td>\n<td align=\"left\">Submission of written research proposal to committee</td>\n</tr>\n<tr>\n<td>✔️</td>\n<td align=\"left\">December 8</td>\n<td align=\"left\">Required pre-presentation form(s) sent to TGS</td>\n</tr>\n<tr>\n<td>✔️</td>\n<td align=\"left\">December 16</td>\n<td align=\"left\">Presentation in front of the committee and fellow graduate students</td>\n</tr>\n<tr>\n<td>✔️</td>\n<td align=\"left\">December 16-23</td>\n<td align=\"left\">Committee members submit <a href=\"https://www.augusta.edu/gradschool/documents/2018-research-proposal-rubric.pdf\">\"Evaluation Rubric\"</a> to TGS</td>\n</tr>\n<tr>\n<td>✔️</td>\n<td align=\"left\">December 19</td>\n<td align=\"left\">Feedback and revisions applied to research proposal</td>\n</tr>\n<tr>\n<td>✔️</td>\n<td align=\"left\">December 21</td>\n<td align=\"left\">Submission of research proposal to TGS Dean's office</td>\n</tr>\n<tr>\n<td>✔️</td>\n<td align=\"left\">December 21</td>\n<td align=\"left\">Submission of <a href=\"https://www.augusta.edu/gradschool/documents/research-proposal-form-phd.pdf\">\"Research Proposal\"</a> form to TGS Dean's office</td>\n</tr>\n</tbody>\n</table>","title":"PhD Research Proposal","date":"2022-12-21","preface":null,"abstract":null,"abs_plain":null},"talkData":{"talks":[{"plas":{"title":"An Information Flow Calculus for Non-Interference","url":"2024-plas","where":"Workshop on Programming Languages and Analysis for Security (PLAS)","when":"2024-10-14","location":"Salt Lake City, Utah","icon":"🇺🇸"}},{"aalto":{"title":"Implicit Computational Complexity: From Theory to Practice","url":"2024-aalto","where":"Theoretical Computer Science weekly seminar at Aalto University","when":"2024-08-20","location":"Espoo, Finland","icon":"🇫🇮"}},{"atva":{"title":"pymwp: A Static Analyzer Determining Polynomial Growth Bounds","url":"2023-atva","where":"International Symposium on Automated Technology for Verification and Analysis (ATVA)","when":"2023-10-25","location":"Singapore","icon":"🇸🇬"}},{"scot":{"title":"mwp-Analysis Improvement and Implementation","url":"2023-scot","where":"SCOT Seminar on Semantic and Formal Approaches to Complexity","when":"2023-03-10","location":"online","icon":"🌐"}},{"coqpl":{"title":"Certifying Complexity Analysis","url":"2023-coqpl","where":"International Workshop on Coq for Programming Languages (CoqPL)","when":"2023-01-21","location":"Boston, Massachusetts","icon":"🇺🇸"}},{"vmcai":{"title":"Distributing and Parallelizing Non-canonical Loops","url":"2023-vmcai","where":"International Conference on Verification, Model Checking, and Abstract Interpretation (VMCAI)","when":"2023-01-16","location":"Boston, Massachusetts","icon":"🇺🇸"}},{"splash":{"title":"Formally Verified Resource Bounds Through Implicit Computational Complexity","url":"2022-splash","where":"Doctoral Symposium at SPLASH","when":"2022-12-06","location":"Auckland, New Zealand","icon":"🇳🇿"}},{"types":{"title":"Realizing Implicit Computational Complexity","url":"2022-types","where":"International Conference on Types for Proofs and Programs (TYPES)","when":"2022-06-20","location":"Nantes, France","icon":"🇫🇷"}},{"grd22":{"title":"Semantic-preserving optimization algorithm for automatic program parallelization","url":"2022-graduate-research-day","where":"The 37th Annual Graduate Research Day at Augusta University","when":"2022-04-01","location":"Augusta, Georgia","icon":"🇺🇸"}},{"lipn":{"title":"Implementing the mwp-flow analysis","url":"2021-implementing-the-mwp-flow-analysis","where":"IRISA Rennes and LIPN seminars","when":"2021-11-15","location":"Rennes and Paris, France","icon":"🇫🇷"}},{"grd21":{"title":"Certifying the complexity and correctness of critical software","url":"2021-graduate-research-day","where":"The 36th Annual Graduate Research Day at Augusta University","when":"2021-03-31","location":"online","icon":"🌐"}}]}},"__N_SSG":true}