name: Publish

on:
  schedule:
    # <min> <hr> <day> <mth> <weekday> => nightly
    - cron: '0 0 * * *'
  push:
    branches: [ main ]
  workflow_dispatch:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    name: build
    if: ${{ vars.BUILD == 1 }}
    runs-on: ubuntu-latest
    steps:
      - name: 🟨 Prepare Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: ✴️️ Checkout target
        uses: actions/checkout@v4
        with:
          token:  ${{ secrets.PAT }}
          repository: ${{ vars.SOURCE_REPO }}
          ref: ${{ vars.SOURCE_BRANCH }}
      - name: 🗄️ Cache files
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-v3-${{ hashFiles('**/package-lock.json') }}
      - name: 🏗️ Build website
        run: |
          export SITE_URL=${{ vars.SITE_URL }}
          (cd site && npm ci && npm run build)          
          rm -rf ./site/out/dissertation
      - name: 📦 Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: website
          path: site/out

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
      - name: ⬇️ Download artifact
        uses: actions/download-artifact@v4
        with:
          name: website
          path: ${{ vars.OUTPUT_PATH }}
      - name: 💅 Custom touches
        run: | 
          rm -rf .github
          touch .nojekyll
      - name: 🚀 Commit
        run: |  
          git config user.name "GitHub Actions"
          git config user.email "<>"
          git checkout --orphan newBranch
          git add -A
          git commit -m "Update website"
          if [ `git rev-parse --verify ${{ vars.OUTPUT_BRANCH }} 2>/dev/null` ]
          then
            git branch -D ${{ vars.OUTPUT_BRANCH }}
          fi          
          git branch -m ${{ vars.OUTPUT_BRANCH }}
          git push -f origin ${{ vars.OUTPUT_BRANCH }}
          git gc --aggressive --prune=all
